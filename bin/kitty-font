#!/usr/bin/env python3

########### README.md
## # Fonts
##
## `kitty-font.py` allows to change the current font used by [kitty](https://sw.kovidgoyal.net/kitty/). It only works on OSX.
##
## Because there is, AFAIK, no direct way to achieve that, the script is a mix of python and apple script. Yup, ductape all the way ðŸ˜† !
##
## ## Installation
##
## ### Fonts
##
## The script only selects fonts that kitty supports. See my [Brewfile](./Brewfile) for a list of fonts. These can be installed by running `brew bundle install` in this directory.
##
## ### Setup
##
## In order to work, the script requires a specific config file for the kitty font to be present (will be created for you if it doesn't exist):
##
## ```
## $ cat ~/.config/kitty/font.conf
## font_family Inconsolata
## bold_family Inconsolata Bold
## macos_thicken_font 0.4
## ```
##
## That config must be included from the main kitty configuration:
##
## ```
## $ cat ~/.config/kitty/kitty.conf
## include font.conf # <---- the mandatory include statement
## bold auto
## italic_font auto
## bold_italic_font auto
##
## # (...)
## ```
##
## ## Running
##
## Simply calling `kitty-font.py` or `kitty-font.py prev` will:
##
## 1. Get a list of fonts (statically assigned)
## 2. Find the next one in the above list of fonts, based on the current one.
## 3. Edit the font configuration file (`font.conf` in the kitty config directory)
## 4. Run some apple script that will tell kitty to reload its configuration.
##
## ### Useful bindings
##
## Adding some mappings to the kitty configuration make the whole process really easy:
##
## ```
## map cmd+y launch --copy-env kitty-font
## map cmd+u launch --copy-env kitty-font prev
## ```
########### README.md

import subprocess
import re
import os
import sys
from os.path import expanduser

fonts = [
        {"regular": "BlexMono Nerd Font Book", "bold": "BlexMono Nerd Font Bold", "thicken": "0.2"},
        {"regular": "FiraMono Nerd Font Regular", "bold": "FiraMono Nerd Font Bold", "thicken": "0.3"},
        {"regular": "GoMono Nerd Font Mono Book", "bold": "GoMono Nerd Font Mono Bold", "thicken": "0.0"},
        {"regular": "Hack Nerd Font Regular", "bold": "Hack Nerd Font Bold", "thicken": "0.2"},
        {"regular": "Inconsolata Nerd Font Mono Medium", "bold": "Inconsolata Nerd Font Mono Bold", "thicken": "0.0"},
        {"regular": "JetBrainsMono Nerd Font Regular", "bold": "JetBrainsMono Nerd Font Bold", "thicken": "0.2"},
        {"regular": "Lekton Nerd Font Mono Regular", "bold": "Lekton Nerd Font Mono Bold", "thicken": "0.4"},
        ]

font_cfg_path = expanduser("~") + '/.config/kitty/font.conf'
direction = -1 if len(sys.argv) > 1 and sys.argv[1] == "prev" else 1

def run(command):
    args = command.split(" ")
    return subprocess.run(args, stdout=subprocess.PIPE).stdout.decode("utf-8")

def current_font():
    with open(font_cfg_path) as reader:
        line = reader.readline()
        return re.sub('font_family ', '', line).strip()

current = current_font()

# Locate the index of the current one
idx = next((index for (index, f) in enumerate(fonts) if f["regular"] == current), 0)

# Set the next font as the current one
with open(font_cfg_path, 'w') as f:
    i = (idx + direction) % len(fonts)
    print('switching to ' + fonts[i]["regular"])
    f.write('font_family ' + fonts[i]["regular"])
    f.write("\n")
    f.write('bold_font ' + fonts[i]["bold"])
    f.write("\n")
    f.write('macos_thicken_font ' + fonts[i]["thicken"])

# Run some apple script to tell kitty to reload the config
script = """
osascript <<EOF
activate application "kitty"
tell application "System Events" to keystroke "," using {control down, command down}
EOF
"""
os.system(script)
