#!/bin/sh

fancy_echo() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}


append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  zshrc="$HOME/.zshrc.laptop"

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
    rbenv rehash
  fi
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

cd $(dirname $0)

fancy_echo "creating $HOME/.bin directory"
if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

fancy_echo "creating $HOME/.zshrc file"
if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

fancy_echo "adding $HOME/.bin to PATH"
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

fancy_echo "updating shell to zsh"
chsh -s "$(which zsh)"

HOMEBREW_PREFIX="/usr/local"

fancy_echo "creating Homebrew directory to $HOMEBREW_PREFIX"
if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

if ! command -v brew >/dev/null; then
  fancy_echo "installing Homebrew"
    curl -fsS 'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
    append_to_zshrc '# recommended by brew doctor'
    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1
    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "uninstalling old Homebrew-Cask"
  brew uninstall --force brew-cask
fi

fancy_echo "updating Homebrew formulae"
brew update
fancy_echo "installing Homebrew formulae"
brew bundle --file=- <<EOF
  #tap "thoughtbot/formulae"
  #tap "homebrew/services"

  # Unix
  brew "ack"
  brew "ctags"
  brew "git"
  brew "openssl"
  #brew "rcm"
  brew "reattach-to-user-namespace"
  brew "the_silver_searcher"
  brew "tmux"
  brew "vim"
  brew "zsh"
  brew "htop"
  brew "jq"
  brew "tree"

  #devOps
  brew "https://raw.githubusercontent.com/Homebrew/legacy-homebrew/ed0585bab57f3ed14e6db06c4a6db09140e9a835/Library/Formula/ansible.rb"
  brew "awscli"
  brew "rsync"
  #brew "bmon"
  brew "vegeta"

  #Go
  brew "go"

  # GitHub
  brew "hub"

  # Image manipulation
  brew "imagemagick"

  # Programming languages
  brew "libyaml" # should come after openssl
  brew "node"
  brew "rbenv"
  brew "ruby-build"

  brew "postgres", restart_service: true
  brew "redis", restart_service: true

  #Divers
  brew "youtube-dl"
EOF

fancy_echo "configuring Go"
append_to_zshrc "#Go configuration"
append_to_zshrc "export GOPATH=~/gocode"
#append_to_zshrc "export GOROOT=/usr/local/Cellar/go/1.6.2/libexec"
append_to_zshrc "export PATH=$PATH:~/gocode/bin"

brew cask install \
  google-chrome \
  slack \
  spotify \
  deezer \
  iterm2 \
  spectacle \
  cyberduck \
  dropbox \
  skype \
  sublime-text \
  flux \
  franz

fancy_echo "configuring Ruby"
find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

ruby_version="$(find_latest_ruby)"
append_to_zshrc 'eval "$(rbenv init - --no-rehash)"' 1
eval "$(rbenv init -)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/local/opt/openssl rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem_install_or_update 'bundler'
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

fancy_echo "updating dot files"
./update_dot_files

fancy_echo "finished!"
